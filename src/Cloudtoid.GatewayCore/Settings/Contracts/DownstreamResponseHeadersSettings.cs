namespace Cloudtoid.GatewayCore.Settings
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using Cloudtoid.GatewayCore.Headers;
    using Microsoft.Net.Http.Headers;

    public sealed class DownstreamResponseHeadersSettings
    {
        private static readonly ISet<string> DoNotTransferBaseHeaders =
            new[]
            {
                HeaderNames.Via,
                HeaderNames.Server,
                Names.ExternalAddress,
                Names.ProxyName,
                Names.CallId
            }
            .Concat(HeaderTypes.StandardHopByHopeHeaders)
            .ToHashSet(StringComparer.OrdinalIgnoreCase);

        internal DownstreamResponseHeadersSettings(
            bool allowHeadersWithEmptyValue,
            bool allowHeadersWithUnderscoreInName,
            bool discardInboundHeaders,
            bool ignoreVia,
            bool addCorrelationId,
            bool addCallId,
            bool addServer,
            IReadOnlyDictionary<string, CookieSettings> cookies,
            IReadOnlyDictionary<string, HeaderOverride> overrides,
            ISet<string> discards)
        {
            AllowHeadersWithEmptyValue = allowHeadersWithEmptyValue;
            AllowHeadersWithUnderscoreInName = allowHeadersWithUnderscoreInName;
            DiscardInboundHeaders = discardInboundHeaders;
            IgnoreVia = ignoreVia;
            AddCorrelationId = addCorrelationId;
            AddCallId = addCallId;
            AddServer = addServer;
            Cookies = cookies;
            Overrides = overrides;
            Discards = discards;

            DoNotTransferHeaders = DoNotTransferBaseHeaders
                .Concat(overrides.Keys)
                .Concat(discards)
                .ToHashSet(StringComparer.OrdinalIgnoreCase);
        }

        public bool AllowHeadersWithEmptyValue { get; }

        public bool AllowHeadersWithUnderscoreInName { get; }

        public bool DiscardInboundHeaders { get; }

        public bool IgnoreVia { get; }

        public bool AddCorrelationId { get; }

        public bool AddCallId { get; }

        public bool AddServer { get; }

        public IReadOnlyDictionary<string, CookieSettings> Cookies { get; }

        public IReadOnlyDictionary<string, HeaderOverride> Overrides { get; }

        public ISet<string> Discards { get; }

        /// <summary>
        /// This is a list of headers that should not be passed on to the downstream client as they are.
        /// They can be transferred, but only when they are transformed. This set consists of
        /// <list type="bullet">
        /// <item>Headers generated by an instance of this proxy</item>
        /// <item>Standard hop-by-hop headers. See <see cref="HeaderTypes.StandardHopByHopeHeaders"/> for more information.</item>
        /// <item>Content headers. See <see cref="HeaderTypes.ContentHeaders"/> for more information.</item>
        /// <item><see cref="Overrides"/> headers.</item>
        /// <item><see cref="Discards"/> headers.</item>
        /// </list>
        /// </summary>
        public ISet<string> DoNotTransferHeaders { get; }
    }
}